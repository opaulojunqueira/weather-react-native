{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useEffect } from 'react';\nimport { Feather, EvilIcons } from '@expo/vector-icons';\nimport MainCard from \"./components/MainCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  var _useState3 = useState('21'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentTemperature = _useState4[0],\n      setCurrentTemperature = _useState4[1];\n\n  var _useState5 = useState('BR, São Paulo'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      location = _useState6[0],\n      setLocation = _useState6[1];\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: darkMode ? '#232634' : '#f2f2f2',\n      alignItems: 'center'\n    },\n    temperature: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      marginTop: 10\n    },\n    temperatureText: {\n      color: darkMode ? '#e0e0e0' : 'black',\n      fontSize: 50\n    },\n    refreshButton: {\n      position: 'absolute',\n      margin: 30,\n      alignSelf: 'flex-start'\n    },\n    cardView: {\n      color: darkMode ? 'black' : 'white',\n      margin: 10,\n      flexDirection: 'row',\n      alignItems: 'center'\n    }\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.refreshButton,\n      children: _jsx(EvilIcons, {\n        name: \"refresh\",\n        size: 30,\n        color: darkMode ? 'white' : 'black'\n      })\n    }), _jsx(Feather, {\n      name: \"sun\",\n      style: {\n        marginTop: 55\n      },\n      size: 40,\n      color: \"orange\"\n    }), _jsxs(View, {\n      style: styles.temperature,\n      children: [_jsx(Text, {\n        style: styles.temperatureText,\n        children: currentTemperature\n      }), _jsx(Text, {\n        style: [styles.temperatureText, {\n          fontSize: 14\n        }],\n        children: \"\\xB0C\"\n      })]\n    }), _jsxs(View, {\n      style: styles.cardView,\n      children: [_jsx(MainCard, {\n        title: 'Manhã',\n        backgroundColor: darkMode ? '#ff873d' : '#cc6e30',\n        icon: 1\n      }), _jsx(MainCard, {\n        title: 'Tarde',\n        backgroundColor: darkMode ? '#d29600' : '#cc6e30',\n        icon: 1\n      }), _jsx(MainCard, {\n        title: 'Noite',\n        backgroundColor: darkMode ? '#ff873d' : '#cc6e30',\n        icon: 1\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["D:/Projetos/ClimaApp/ClimaApp/App.js"],"names":["StatusBar","useState","useEffect","Feather","EvilIcons","MainCard","App","darkMode","setDarkMode","currentTemperature","setCurrentTemperature","location","setLocation","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","temperature","flexDirection","marginTop","temperatureText","color","fontSize","refreshButton","position","margin","alignSelf","cardView"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { useState, useEffect } from 'react';\n// Icons\nimport { Feather, EvilIcons } from '@expo/vector-icons';\n// Components\nimport MainCard from './components/MainCard';\n\nexport default function App() {\n\n  const [darkMode, setDarkMode] = useState(true)\n  const [currentTemperature, setCurrentTemperature] = useState('21')\n  const [location, setLocation] = useState('BR, São Paulo')\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: darkMode ? '#232634' : '#f2f2f2',\n      alignItems: 'center',\n    },\n    temperature: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      marginTop: 10,\n    },\n    temperatureText: {\n      color: darkMode ? '#e0e0e0' : 'black',\n      fontSize: 50,\n    },\n    refreshButton: {\n      position: 'absolute',\n      margin: 30,\n      alignSelf: 'flex-start'\n    },\n    cardView: {\n      color: darkMode ? 'black' : 'white',\n      margin: 10,\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n  });\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.refreshButton}>\n        <EvilIcons name=\"refresh\" size={30} color={darkMode ? 'white' : 'black'} />\n      </TouchableOpacity>\n      <Feather name=\"sun\" style={{ marginTop: 55 }} size={40} color=\"orange\" />\n      <View style={styles.temperature}>\n        <Text style={styles.temperatureText}>{currentTemperature}</Text>\n        <Text style={[styles.temperatureText, { fontSize: 14 }]}>°C</Text>\n      </View>\n\n      <View style={styles.cardView}>\n        <MainCard title={'Manhã'} backgroundColor={darkMode ? '#ff873d' : '#cc6e30'} icon={1}></MainCard>\n        <MainCard title={'Tarde'} backgroundColor={darkMode ? '#d29600' : '#cc6e30'} icon={1}></MainCard>\n        <MainCard title={'Noite'} backgroundColor={darkMode ? '#ff873d' : '#cc6e30'} icon={1}></MainCard>\n      </View>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}