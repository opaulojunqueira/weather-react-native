{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getConsultApi() {\n  var axios, Location, date, Hours, result, latitude, longitude;\n  return _regeneratorRuntime.async(function getConsultApi$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          axios = require('axios');\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get('https://geolocation-db.com/json/'));\n\n        case 3:\n          Location = _context2.sent;\n          date = new Date();\n          Hours = date.getHours() + ':' + date.getMinutes();\n          result = [];\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(Location.data.latitude);\n\n        case 9:\n          latitude = _context2.sent;\n          _context2.next = 12;\n          return _regeneratorRuntime.awrap(Location.data.longitude);\n\n        case 12:\n          longitude = _context2.sent;\n          _context2.next = 15;\n          return _regeneratorRuntime.awrap(axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=a10534631766659c98a684169d309aa5\").then(function _callee(res) {\n            var data, Temperature, Sensation, Humidity, TemperatureMin, Temp, City, Country;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    data = res.data;\n                    Temperature = data.main.temp;\n                    Sensation = data.main.feels_like;\n                    Humidity = data.main.humidity;\n                    TemperatureMin = data.main;\n                    Temp = data.wind.speed;\n                    City = Location.data.city;\n                    Country = Location.data.country_code;\n                    result = [Country, City, Hours, Temperature, Sensation, Humidity, Rain, Wind];\n\n                  case 9:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }));\n\n        case 15:\n          return _context2.abrupt(\"return\", result);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["D:/Projetos/ClimaApp/ClimaApp/api/ConsultApi.js"],"names":["getConsultApi","axios","require","get","Location","date","Date","Hours","getHours","getMinutes","result","data","latitude","longitude","then","res","Temperature","main","temp","Sensation","feels_like","Humidity","humidity","TemperatureMin","Temp","wind","speed","City","city","Country","country_code","Rain","Wind"],"mappings":";AAAA,eAAe,SAAeA,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,UAAAA,KAFK,GAEGC,OAAO,CAAC,OAAD,CAFV;AAAA;AAAA,2CAIYD,KAAK,CAACE,GAAN,CAAU,kCAAV,CAJZ;;AAAA;AAILC,UAAAA,QAJK;AAMPC,UAAAA,IANO,GAMA,IAAIC,IAAJ,EANA;AAOLC,UAAAA,KAPK,GAOGF,IAAI,CAACG,QAAL,KAAkB,GAAlB,GAAwBH,IAAI,CAACI,UAAL,EAP3B;AASPC,UAAAA,MATO,GASE,EATF;AAAA;AAAA,2CAWYN,QAAQ,CAACO,IAAT,CAAcC,QAX1B;;AAAA;AAWLA,UAAAA,QAXK;AAAA;AAAA,2CAYaR,QAAQ,CAACO,IAAT,CAAcE,SAZ3B;;AAAA;AAYLA,UAAAA,SAZK;AAAA;AAAA,2CAcLZ,KAAK,CAACE,GAAN,0DAAiES,QAAjE,aAAiFC,SAAjF,8CACDC,IADC,CACI,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACIJ,oBAAAA,IADJ,GACWI,GAAG,CAACJ,IADf;AAEIK,oBAAAA,WAFJ,GAEkBL,IAAI,CAACM,IAAL,CAAUC,IAF5B;AAGIC,oBAAAA,SAHJ,GAGgBR,IAAI,CAACM,IAAL,CAAUG,UAH1B;AAIIC,oBAAAA,QAJJ,GAIeV,IAAI,CAACM,IAAL,CAAUK,QAJzB;AAKIC,oBAAAA,cALJ,GAKqBZ,IAAI,CAACM,IAL1B;AAMIO,oBAAAA,IANJ,GAMWb,IAAI,CAACc,IAAL,CAAUC,KANrB;AAOIC,oBAAAA,IAPJ,GAOWvB,QAAQ,CAACO,IAAT,CAAciB,IAPzB;AAQIC,oBAAAA,OARJ,GAQczB,QAAQ,CAACO,IAAT,CAAcmB,YAR5B;AAUFpB,oBAAAA,MAAM,GAAG,CAACmB,OAAD,EAAUF,IAAV,EAAgBpB,KAAhB,EAAuBS,WAAvB,EAAoCG,SAApC,EAA+CE,QAA/C,EAAyDU,IAAzD,EAA+DC,IAA/D,CAAT;;AAVE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CAdK;;AAAA;AAAA,4CA4BJtB,MA5BI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default async function getConsultApi() {\r\n\r\n    const axios = require('axios');\r\n\r\n    const Location = await axios.get('https://geolocation-db.com/json/')\r\n\r\n    let date = new Date()\r\n    const Hours = date.getHours() + ':' + date.getMinutes()\r\n\r\n    var result = []\r\n\r\n    const latitude = await Location.data.latitude\r\n    const longitude = await Location.data.longitude\r\n\r\n    await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=a10534631766659c98a684169d309aa5`)\r\n        .then(async(res) => {\r\n            const data = res.data\r\n            const Temperature = data.main.temp\r\n            const Sensation = data.main.feels_like\r\n            const Humidity = data.main.humidity\r\n            const TemperatureMin = data.main\r\n            const Temp = data.wind.speed\r\n            const City = Location.data.city\r\n            const Country = Location.data.country_code\r\n\r\n            result = [Country, City, Hours, Temperature, Sensation, Humidity, Rain, Wind]\r\n        })\r\n\r\n    return result\r\n}\r\n"]},"metadata":{},"sourceType":"module"}