{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getConsultApi() {\n  var axios, res, latitude, longitude, result;\n  return _regeneratorRuntime.async(function getConsultApi$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          axios = require('axios');\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get('https://geolocation-db.com/json/'));\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(res.data.latitude);\n\n        case 6:\n          latitude = _context2.sent;\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(res.data.longitude);\n\n        case 9:\n          longitude = _context2.sent;\n          result = [];\n          _context2.next = 13;\n          return _regeneratorRuntime.awrap(axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=a10534631766659c98a684169d309aa5\").then(function _callee(req) {\n            var data, Temperature, Sensation, Humidity, Rain, City, Country;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    data = req.data;\n                    Temperature = data.main.temp;\n                    Sensation = data.main.feels_like;\n                    Humidity = data.main.humidity;\n                    Rain = data.main;\n                    _context.next = 7;\n                    return _regeneratorRuntime.awrap(res.city);\n\n                  case 7:\n                    City = _context.sent;\n                    _context.next = 10;\n                    return _regeneratorRuntime.awrap(res.country_name);\n\n                  case 10:\n                    Country = _context.sent;\n                    result = [Country, City, Temperature, Sensation, Humidity, Rain];\n\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }));\n\n        case 13:\n          return _context2.abrupt(\"return\", result);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["D:/Projetos/ClimaApp/ClimaApp/api/ConsultApi.js"],"names":["getConsultApi","axios","require","get","res","data","latitude","longitude","result","then","req","Temperature","main","temp","Sensation","feels_like","Humidity","humidity","Rain","city","City","country_name","Country"],"mappings":";AAAA,eAAe,SAAeA,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,UAAAA,KAFK,GAEGC,OAAO,CAAC,OAAD,CAFV;AAAA;AAAA,2CAIOD,KAAK,CAACE,GAAN,CAAU,kCAAV,CAJP;;AAAA;AAILC,UAAAA,GAJK;AAAA;AAAA,2CAMYA,GAAG,CAACC,IAAJ,CAASC,QANrB;;AAAA;AAMLA,UAAAA,QANK;AAAA;AAAA,2CAOaF,GAAG,CAACC,IAAJ,CAASE,SAPtB;;AAAA;AAOLA,UAAAA,SAPK;AASPC,UAAAA,MATO,GASE,EATF;AAAA;AAAA,2CAWLP,KAAK,CAACE,GAAN,0DAAiEG,QAAjE,aAAiFC,SAAjF,8CACDE,IADC,CACI,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACIL,oBAAAA,IADJ,GACWK,GAAG,CAACL,IADf;AAEIM,oBAAAA,WAFJ,GAEkBN,IAAI,CAACO,IAAL,CAAUC,IAF5B;AAGIC,oBAAAA,SAHJ,GAGgBT,IAAI,CAACO,IAAL,CAAUG,UAH1B;AAIIC,oBAAAA,QAJJ,GAIeX,IAAI,CAACO,IAAL,CAAUK,QAJzB;AAKIC,oBAAAA,IALJ,GAKWb,IAAI,CAACO,IALhB;AAAA;AAAA,qDAMiBR,GAAG,CAACe,IANrB;;AAAA;AAMIC,oBAAAA,IANJ;AAAA;AAAA,qDAOoBhB,GAAG,CAACiB,YAPxB;;AAAA;AAOIC,oBAAAA,OAPJ;AASFd,oBAAAA,MAAM,GAAG,CAACc,OAAD,EAAUF,IAAV,EAAgBT,WAAhB,EAA6BG,SAA7B,EAAwCE,QAAxC,EAAkDE,IAAlD,CAAT;;AATE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CAXK;;AAAA;AAAA,4CAwBJV,MAxBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default async function getConsultApi() {\r\n\r\n    const axios = require('axios');\r\n\r\n    const res = await axios.get('https://geolocation-db.com/json/')\r\n\r\n    const latitude = await res.data.latitude\r\n    const longitude = await res.data.longitude\r\n\r\n    var result = []\r\n\r\n    await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=a10534631766659c98a684169d309aa5`)\r\n        .then(async(req) => {\r\n            const data = req.data\r\n            const Temperature = data.main.temp\r\n            const Sensation = data.main.feels_like\r\n            const Humidity = data.main.humidity\r\n            const Rain = data.main\r\n            const City = await res.city\r\n            const Country = await res.country_name\r\n\r\n            result = [Country, City, Temperature, Sensation, Humidity, Rain]\r\n        })\r\n\r\n    return result\r\n}\r\n"]},"metadata":{},"sourceType":"module"}