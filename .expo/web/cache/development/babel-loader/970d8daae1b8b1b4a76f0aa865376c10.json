{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getConsultApi() {\n  var axios, getLocation;\n  return _regeneratorRuntime.async(function getConsultApi$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          getLocation = function _getLocation() {\n            var res, latitude, longitude;\n            return _regeneratorRuntime.async(function getLocation$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(axios.get('https://geolocation-db.com/json/'));\n\n                  case 2:\n                    res = _context.sent;\n                    setLocation(res.data);\n                    _context.next = 6;\n                    return _regeneratorRuntime.awrap(res.data.latitude);\n\n                  case 6:\n                    latitude = _context.sent;\n                    _context.next = 9;\n                    return _regeneratorRuntime.awrap(res.data.longitude);\n\n                  case 9:\n                    longitude = _context.sent;\n                    axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=a10534631766659c98a684169d309aa5\").then(function (result) {\n                      var data = result.data;\n                      res;\n                    });\n\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          axios = require('axios');\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["D:/Projetos/ClimaApp/ClimaApp/api/ConsultApi.js"],"names":["getConsultApi","getLocation","axios","get","res","setLocation","data","latitude","longitude","then","result","require"],"mappings":";AAAA,eAAe,SAAeA,aAAf;AAAA,aAIIC,WAJJ;AAAA;AAAA;AAAA;AAAA;AAIIA,UAAAA,WAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAKWC,KAAK,CAACC,GAAN,CAAU,kCAAV,CALX;;AAAA;AAKDC,oBAAAA,GALC;AAMPC,oBAAAA,WAAW,CAACD,GAAG,CAACE,IAAL,CAAX;AANO;AAAA,qDAQgBF,GAAG,CAACE,IAAJ,CAASC,QARzB;;AAAA;AAQDA,oBAAAA,QARC;AAAA;AAAA,qDASiBH,GAAG,CAACE,IAAJ,CAASE,SAT1B;;AAAA;AASDA,oBAAAA,SATC;AAWPN,oBAAAA,KAAK,CAACC,GAAN,0DAAiEI,QAAjE,aAAiFC,SAAjF,8CACKC,IADL,CACU,UAACC,MAAD,EAAY;AACd,0BAAMJ,IAAI,GAAGI,MAAM,CAACJ,IAApB;AACAF,sBAAAA,GAAG;AACN,qBAJL;;AAXO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAELF,UAAAA,KAFK,GAEGS,OAAO,CAAC,OAAD,CAFV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default async function getConsultApi() {\r\n\r\n    const axios = require('axios');\r\n    \r\n    async function getLocation() {\r\n        const res = await axios.get('https://geolocation-db.com/json/')\r\n        setLocation(res.data)\r\n\r\n        const latitude = await res.data.latitude\r\n        const longitude = await res.data.longitude\r\n\r\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=a10534631766659c98a684169d309aa5`)\r\n            .then((result) => {\r\n                const data = result.data\r\n                res\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}