{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getConsultApi() {\n  var axios, res, latitude, longitude, result;\n  return _regeneratorRuntime.async(function getConsultApi$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          axios = require('axios');\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get('https://geolocation-db.com/json/'));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.data.latitude);\n\n        case 6:\n          latitude = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(res.data.longitude);\n\n        case 9:\n          longitude = _context.sent;\n          result = [];\n          axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=a10534631766659c98a684169d309aa5\").then(function (req) {\n            var data = req.data;\n            var Temperature = data.main.temp;\n            var Sensation = data.main.feels_like;\n            var Humidity = data.main.humidity;\n            var Rain = data.main;\n            var City = res.city;\n            var Country = res.country_name;\n            result = [Temperature, Sensation, Humidity, Rain, Country];\n          });\n          return _context.abrupt(\"return\", result);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["D:/Projetos/ClimaApp/ClimaApp/api/ConsultApi.js"],"names":["getConsultApi","axios","require","get","res","data","latitude","longitude","result","then","req","Temperature","main","temp","Sensation","feels_like","Humidity","humidity","Rain","City","city","Country","country_name"],"mappings":";AAAA,eAAe,SAAeA,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,UAAAA,KAFK,GAEGC,OAAO,CAAC,OAAD,CAFV;AAAA;AAAA,2CAIOD,KAAK,CAACE,GAAN,CAAU,kCAAV,CAJP;;AAAA;AAILC,UAAAA,GAJK;AAAA;AAAA,2CAMYA,GAAG,CAACC,IAAJ,CAASC,QANrB;;AAAA;AAMLA,UAAAA,QANK;AAAA;AAAA,2CAOaF,GAAG,CAACC,IAAJ,CAASE,SAPtB;;AAAA;AAOLA,UAAAA,SAPK;AASPC,UAAAA,MATO,GASE,EATF;AAWXP,UAAAA,KAAK,CAACE,GAAN,0DAAiEG,QAAjE,aAAiFC,SAAjF,8CACKE,IADL,CACU,UAACC,GAAD,EAAS;AACX,gBAAML,IAAI,GAAGK,GAAG,CAACL,IAAjB;AACA,gBAAMM,WAAW,GAAGN,IAAI,CAACO,IAAL,CAAUC,IAA9B;AACA,gBAAMC,SAAS,GAAGT,IAAI,CAACO,IAAL,CAAUG,UAA5B;AACA,gBAAMC,QAAQ,GAAGX,IAAI,CAACO,IAAL,CAAUK,QAA3B;AACA,gBAAMC,IAAI,GAAGb,IAAI,CAACO,IAAlB;AACA,gBAAMO,IAAI,GAAGf,GAAG,CAACgB,IAAjB;AACA,gBAAMC,OAAO,GAAGjB,GAAG,CAACkB,YAApB;AAEAd,YAAAA,MAAM,GAAG,CAACG,WAAD,EAAcG,SAAd,EAAyBE,QAAzB,EAAmCE,IAAnC,EAAyCG,OAAzC,CAAT;AACH,WAXL;AAXW,2CAwBJb,MAxBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default async function getConsultApi() {\r\n\r\n    const axios = require('axios');\r\n\r\n    const res = await axios.get('https://geolocation-db.com/json/')\r\n\r\n    const latitude = await res.data.latitude\r\n    const longitude = await res.data.longitude\r\n\r\n    var result = []\r\n\r\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=a10534631766659c98a684169d309aa5`)\r\n        .then((req) => {\r\n            const data = req.data\r\n            const Temperature = data.main.temp\r\n            const Sensation = data.main.feels_like\r\n            const Humidity = data.main.humidity\r\n            const Rain = data.main\r\n            const City = res.city\r\n            const Country = res.country_name\r\n\r\n            result = [Temperature, Sensation, Humidity, Rain, Country]\r\n        })\r\n\r\n    return result\r\n}\r\n"]},"metadata":{},"sourceType":"module"}