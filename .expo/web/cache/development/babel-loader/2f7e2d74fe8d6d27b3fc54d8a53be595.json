{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getCurrentWeather(clientIP) {\n  var axios, ip, result;\n  return _regeneratorRuntime.async(function getCurrentWeather$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          axios = require('axios');\n          ip = clientIP;\n          result = [];\n          console.log(ip);\n          console.log(\"https://api.hgbrasil.com/weather?key=55a51ced&user_ip=\" + ip);\n          axios.get(\"https://api.hgbrasil.com/weather?key=55a51ced&user_ip=\" + ip).then(function (result) {\n            var data = result.data;\n          }).catch(function (err) {\n            console.log(err);\n          });\n          console.log(data);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["D:/Projetos/ClimaApp/ClimaApp/api/ConsultApi.js"],"names":["getCurrentWeather","clientIP","axios","require","ip","result","console","log","get","then","data","catch","err"],"mappings":";AAAA,eAAe,SAAeA,iBAAf,CAAiCC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,UAAAA,KAFK,GAEGC,OAAO,CAAC,OAAD,CAFV;AAGLC,UAAAA,EAHK,GAGAH,QAHA;AAKPI,UAAAA,MALO,GAKE,EALF;AAMXC,UAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACAE,UAAAA,OAAO,CAACC,GAAR,4DAAqEH,EAArE;AAEAF,UAAAA,KAAK,CAACM,GAAN,4DAAmEJ,EAAnE,EAAyEK,IAAzE,CAA8E,UAACJ,MAAD,EAAY;AACtF,gBAAMK,IAAI,GAAGL,MAAM,CAACK,IAApB;AACH,WAFD,EAEGC,KAFH,CAES,UAACC,GAAD,EAAS;AACdN,YAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH,WAJD;AAMAN,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;;AAfW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default async function getCurrentWeather(clientIP) {\r\n\r\n    const axios = require('axios');\r\n    const ip = clientIP\r\n\r\n    var result = []\r\n    console.log(ip)\r\n    console.log(`https://api.hgbrasil.com/weather?key=55a51ced&user_ip=${ip}`)\r\n\r\n    axios.get(`https://api.hgbrasil.com/weather?key=55a51ced&user_ip=${ip}`).then((result) => {\r\n        const data = result.data\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n\r\n    console.log(data)\r\n}"]},"metadata":{},"sourceType":"module"}